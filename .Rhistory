library(swirl)
swirl()
dim(pm0)
head(pm0)
colnames(pm0)
cnames
cnames <- strsplit(cnames, sep = "|", fixed = T)
cnames <- strsplit(cnames, "|", fixed = T)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0,x1)
summary(x0)
summar(x1)
summary(x1)
boxplot(x0,x1)
boxplot(x0,x1)
boxplot(log(x0),log(x1))
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = T)
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- as.Date(pm1$Date)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(pm1$Date), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <-intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0, pm0$State.Code == 36 & pm0$county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates() <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub,na.rm = TRUE),lwd=2)
abline(median(x0sub,na.rm = TRUE),lwd = 2)
abline(median(x0sub,na.rm = TRUE), lwd = 2)
abline(a=median(x0sub,na.rm = TRUE), lwd = 2)
abline( median(x0sub, na.rm = TRUE), lwd = 2)
median(x0sub, na.rm = TRUE)
abline(h= median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h= median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0<- mean(pm0, tapply(pm0$Sample.Value, pm0$State.Code, mean))
mn0<- with(pm0, tapply(Sample.Value,State.Code,mean, na.rm = TRUE))
str(mn0)
mn1<- with(pm1, tapply(Sample.Value,State.Code,mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(names(mn0), mn0)
d0<-data.frame(state = names(mn0), mean =mn0)
d1<-data.frame(state = names(mn1), mean =mn1)
mrg <- merge(d0,d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(0.5,2.5)))
with(mrg, points(rep(1,52), mrg[,3]))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52))
segments(rep(1,52))
segments(mrg[,2], mrg[,3], rep(1,52), rep(2,52))
segments(rep(1,52), mrg[,2], rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
install.packages(c("digest", "leaps", "RSQLite", "tidyr", "xml2"))
install.packages(c("digest", "leaps", "RSQLite", "tidyr", "xml2"))
install.packages("knitr")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r echo=TRUE}
setwd("S:/GitRepository/Reproducible Research - Project 1/RepData_PeerAssessment1")
if (!dir.exists("./data/")){
dir.create("./data/")
unzip("activity.zip", exdir = "./data")
}
activity <- read.csv("./data/activity.csv", header = TRUE, colClasses = c("numeric","Date","numeric"))
```
## What is mean total number of steps taken per day?
```{r echo=TRUE}
```
## What is the average daily activity pattern?
```{r echo=TRUE}
```
## Imputing missing values
```{r echo=TRUE}
```
## Are there differences in activity patterns between weekdays and weekends?
```{r echo=TRUE}
```
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(aes(xintercept = c(stepsperday.median$steps, stepsperday.mean$steps)), colour = "blue", show.legend = TRUE)
library(dplyr)
library(ggplot2)
stepsperday.total <- activity %>% group_by(date) %>% summarise(steps=sum(steps))
stepsperday.mean <- mean(stepsperday.total$steps, na.rm = TRUE)
stepsperday.median <- median(stepsperday.total$steps, na.rm = TRUE)
table(stepsperday.mean,stepsperday.median)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(aes(xintercept = c(stepsperday.median$steps, stepsperday.mean, show.legend = TRUE)), colour = "blue", show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(aes(xintercept = c(stepsperday.median, stepsperday.mean, show.legend = TRUE)), colour = "blue", show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(aes(xintercept = c(stepsperday.median$steps, stepsperday.mean$steps, show.legend = TRUE)), colour = "blue", show.legend = TRUE)
stepsperday.mean <- mean(stepsperday.total$steps, na.rm = TRUE)
stepsperday.median <- median(stepsperday.total$steps, na.rm = TRUE)
table(stepsperday.mean,stepsperday.median)
agg <- c(stepsperday.mean,stepsperday.median)
agg <- data.frame(c(stepsperday.mean,stepsperday.median), colnames= c("mean","median"))
agg <- data.frame(c(stepsperday.mean,stepsperday.median), colClasses=c("numeric","numeric"), colnames= c("mean","median"))
stepsperday.total <- activity %>% group_by(date) %>% summarise(steps=sum(steps))
stepsperday.mean <- mean(stepsperday.total$steps, na.rm = TRUE)
stepsperday.median <- median(stepsperday.total$steps, na.rm = TRUE)
agg <- data.frame(c(stepsperday.mean,stepsperday.median), colClasses=c("numeric","numeric"), colnames= c("mean","median"))
agg
agg <- as.data.frame(c(stepsperday.mean,stepsperday.median))
agg
agg <- as.data.frame(cbind(stepsperday.mean,stepsperday.median))
agg
agg <- as.data.frame(cbind(stepsperday.mean,stepsperday.median), colnames=c("mean","median"))
agg
colnames(agg) <- c("mean","median")
agg
agg.summary <- as.data.frame(c(stepsperday.mean,stepsperday.median))
agg.summary <- as.data.frame(c(stepsperday.mean,stepsperday.median))
colnames(agg) <- c("agg")
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg, aes(xintercept = agg , show.legend = TRUE)), colour = "blue", show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg, aes(xintercept = agg, show.legend = TRUE), colour = "blue", show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg, aes(xintercept = agg), colour = "blue", show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg, aes(xintercept = agg, colour = agg), colour = "blueS", show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg, aes(xintercept = agg, colour = c("blue", "red")), colour = "blueS", show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg, aes(xintercept = agg), colour = "blueS", show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg, aes(xintercept = agg), colour = "blueS", show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg, aes(xintercept = agg), colour = "blue", show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg, aes(xintercept = agg), colour = c("blue","red"), show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg, aes(xintercept = agg), colour = "red", show.legend = TRUE)
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg, aes(xintercept = agg), colour = "red")
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg.summary, aes(xintercept = agg), colour = "red")
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg.summary, aes(xintercept = agg), colour = "red")
agg.summary <- as.data.frame(c(stepsperday.mean,stepsperday.median))
colnames(agg) <- c("agg")
agg
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg.summary, aes(xintercept = agg), colour = "red")
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(agg.summary, aes(xintercept = agg), colour = "red")
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(agg.summary, aes(xintercept = agg), colour = "red")
agg.summary <- c(stepsperday.mean,stepsperday.median)
agg
agg.summary <- c(stepsperday.mean,stepsperday.median)
agg
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(agg.summary, aes(xintercept = agg.summary), colour = "red")
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(aes(xintercept = agg.summary), colour = "red")
agg.summary <- as.data.frame(rbind(stepsperday.mean, stepsperday.median))
agg.summary
colnames(agg.summary) < "agg"
agg
colnames(agg.summary) <- "agg"
agg
agg.summary <- as.data.frame(rbind(stepsperday.mean, stepsperday.median))
colnames(agg.summary) <- "agg"
agg
agg.summary <- as.data.frame(rbind(stepsperday.mean, stepsperday.median))
agg.summary
colnames(agg.summary) <- "agg"
agg.summary
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg.summary, aes(xintercept = agg, colour = cond), colour = "red")
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg.summary, aes(xintercept = agg, colour = cond))
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg.summary, aes(xintercept = agg), colour = "red")
a
ggplot(data = stepsperday.total, aes(x = steps)) +
geom_histogram(fill = "white", colour="black")+
geom_vline(data = agg.summary, aes(xintercept = agg), colour = "red")
activity.transform <- dcast.data.table(activity, formula = date ~ interval, fun.aggregate = mean)
library(data.table)
activity.transform <- dcast.data.table(activity, formula = date ~ interval, fun.aggregate = mean)
activity.transform <- dcast.data.table(as.data.table(activity), formula = date ~ interval, fun.aggregate = mean)
activity.transform <- dcast.data.table(as.data.table(activity), formula = date ~ interval,value.var = steps, fun.aggregate = mean)
activity.transform <- dcast.data.table(as.data.table(activity), formula = date ~ interval, value.var = "steps", fun.aggregate = mean)
qplot(x = date, y = steps , activity.transform)
qplot(x = activity.transform$date, y = activity.transform$steps , activity.transform)
activity.transform
qplot(x = activity.transform$date, y = activity.transform$steps , activity.transform, geom="line")
qplot(x = activity.transform$date, y = activity.transform$steps , data = activity.transform, geom="line")
qplot(x = date, y = steps , data = activity.transform, geom = "line")
qplot(x = date , data = activity.transform, geom = "line")
activity.transform <- activity %>% group_by(interval) %>% summarise(steps=mean(steps))
activity.transform
activity.transform <- activity %>% group_by(interval) %>% summarise(steps=mean(steps, na.rm = TRUE))
activity.transform
qplot(x = date , y = steps, data = activity.transform, geom = "line")
activity.transform <- activity %>% group_by(date,interval) %>% summarise(steps=mean(steps, na.rm = TRUE))
activity.transform
activity.transform <- activity %>% group_by(interval,date) %>% summarise(steps=mean(steps, na.rm = TRUE))
activity.transform
activity.transform <- activity %>% group_by(interval) %>% summarise(steps=mean(steps, na.rm = TRUE))
activity.transform
activity.transform < - cbind(unique(activity$date), activity.transform)
activity.transform
activity.transform <- activity %>% group_by(interval) %>% summarise(steps=mean(steps, na.rm = TRUE))
activity.transform
activity.transform <- activity %>% group_by(interval,date) %>% summarise(steps=mean(steps, na.rm = TRUE))
activity.transform
dt <- dcast.data.table(as.data.table(activity), formula = date ~ interval, value.var = "steps", fun.aggregate = mean, rm.na)
dt <- dcast.data.table(as.data.table(activity), formula = date ~ interval, value.var = "steps", fun.aggregate = mean)
dt <- dcast.data.table(as.data.table(activity), formula = date ~ interval, value.var = "steps", fun = mean, na.rm = TRUE)
dt <- dcast.data.table(as.data.table(activity), formula = date ~ interval, value.var = "steps", fun = mean, na.rm = TRUE)
dt
dt <- dcast.data.table(as.data.table(activity), formula = date ~ interval, value.var = "steps", fun = colMeans, na.rm = TRUE)
dt <- dcast.data.table(as.data.table(activity), formula = date ~ interval, value.var = "steps", fun = colMeans, na.rm = TRUE)
dt <- dcast.data.table(as.data.table(activity), formula = date ~ interval, value.var = "steps", fun = mean, na.rm = TRUE)
colMeans(dt, na.rm = TRUE)
colMeans(dt, na.rm = TRUE)
View(dt)
dt[is.nan(.SD)]<-NA
dt <- dcast.data.table(as.data.table(activity), formula = date ~ interval, value.var = "steps", fun = mean, na.rm = TRUE)
dt[is.nan(.SD)]<-NA
View(dt)
View(dt)
dt[is.nan(.SD)]<-NA
dt <- activity %>% group_by(interval) %>% summarise(mean(steps, na.rm=TRUE))
dt <- activity %>% group_by(interval) %>% summarise(mean(steps, na.rm=TRUE))
dt
qplot(x = interval , y = steps, data = intdata, geom = "line")
intdata <- activity %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm=TRUE))
qplot(x = interval , y = steps, data = intdata, geom = "line")
qplot(x = interval , y = steps, data = intdata, geom = "line", main ="Average steps per interval")
maxstep <- intdata[max(intdata$steps), "interval"]
maxstep
max(intdata$steps)
maxstep <- intdata[intdata$steps = max(intdata$steps), "interval"]
maxstep <- intdata[intdata$steps == max(intdata$steps), "interval"]
maxstep
sumna <- sum(which(activity$steps==NA))
sumna <- sum(which(activity$steps == NA))
sumna
sumna <- which(activity$steps == NA)
sumna
sumna <- is.na(activity$steps)
sumna
sumna <- sum(is.na(activity$steps))
sumna
activity.impute <- which(is.na(activity$steps))
activity.impute
activity.impute <- activity[which(is.na(activity$steps)),"interval"]
activity.impute
activity.impute <- intdata[intdata$interval == activity[which(is.na(activity$steps)),"interval"],"steps"]
activity.impute
narows <- which(is.na(activity$steps))
narows
length(narows)
imputevalues
imputevalues <- intdata[intdata$interval == activity[narows,"interval"],"steps"]
imputevalues
intdata
activity.impute <- activity
narows <- which(is.na(activity$steps))
imputevalues <- intdata[intdata$interval == activity[narows,"interval"],"steps"]
activity.imput[narows,"steps"] <- imputevalues
activity.impute <- activity
activity.impute[narows,"steps"] <- imputevalues
activity.impute[narows,"steps"] <- intdata[intdata$interval == activity[narows,"interval"],"steps"]
library(gridExtra)
install.packages("gridExtra")
narows
activity.impute[narows,"steps"]
activity.impute <- activity
activity.impute[narows,"steps"]
activity.impute <- activity
activity.impute[narows,"steps"] <- intdata[intdata$interval == activity[narows,"interval"],"steps"]
narows <- which(is.na(activity$steps))
activity.impute <- activity
narows <- which(is.na(activity$steps))
activity.impute[narows,"steps"] <- intdata[intdata$interval == activity[narows,"interval"],"steps"]
activity.impute[narows,"steps"]
intdata[intdata$interval == activity[narows,"interval"],"steps"]
dim(activity.impute)
activity.impute[narows,"steps"]
activity.impute[is.na(activity$steps)==TRUE,"steps"] <- intdata[intdata$interval == activity[narows,"interval"],"steps"]
activity.impute <- activity
activity.impute[is.na(activity$steps)==TRUE,"steps"] <- intdata[intdata$interval == activity[narows,"interval"],"steps"]
activity.impute[narows,"steps"]
narows
activity.impute[is.na(activity.impute$steps)==TRUE,"steps"] <- intdata[intdata$interval == activity[narows,"interval"],"steps"]
activity.impute[narows,"steps"]
narows
activity.impute <- activity
activity.impute[1,"steps"]
activity.impute[1,"steps"] <- 1
activity.impute[narows,"steps"] <- 1
activity.impute[narows,"steps"] <- 1
narows
activity.impute
activity.impute <- activity
activity.impute <- activity
activity.impute[narows,"steps"] <- 1
activity.impute
class(intdata[intdata$interval == activity[narows,"interval"],"steps"])
activity.impute[is.na(activity.impute$steps),"steps"] <- as.vector(intdata[intdata$interval == activity[narows,"interval"],"steps"])
